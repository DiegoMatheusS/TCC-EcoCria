// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCCEcoCria.Data;

#nullable disable

namespace ECOCRIA.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Materiais", b =>
                {
                    b.Property<int>("IdMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMaterial"));

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<string>("NomeMaterial")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.HasKey("IdMaterial");

                    b.ToTable("TB_MATERIAIS", (string)null);

                    b.HasData(
                        new
                        {
                            IdMaterial = 1,
                            Material = 1,
                            NomeMaterial = "Garrafa Pet"
                        },
                        new
                        {
                            IdMaterial = 2,
                            Material = 4,
                            NomeMaterial = "Papelão"
                        },
                        new
                        {
                            IdMaterial = 3,
                            Material = 1,
                            NomeMaterial = "Saco Plástico"
                        },
                        new
                        {
                            IdMaterial = 4,
                            Material = 2,
                            NomeMaterial = "Lata de Feijoada"
                        },
                        new
                        {
                            IdMaterial = 5,
                            Material = 2,
                            NomeMaterial = "Latinha"
                        },
                        new
                        {
                            IdMaterial = 6,
                            Material = 1,
                            NomeMaterial = "Garrafa Pet"
                        },
                        new
                        {
                            IdMaterial = 7,
                            Material = 3,
                            NomeMaterial = "Jarra de Vidro"
                        });
                });

            modelBuilder.Entity("Models.Parceiros", b =>
                {
                    b.Property<int>("IdParceiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParceiro"));

                    b.Property<DateTime>("DataDoacao")
                        .HasColumnType("datetime2");

                    b.Property<double>("DoacaoParceiro")
                        .HasColumnType("float");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NomeParceiro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<bool>("StatusParceiro")
                        .HasColumnType("bit");

                    b.Property<int?>("UsuarioIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdParceiro");

                    b.HasIndex("UsuarioIdUsuario");

                    b.ToTable("TB_PARCEIROS", (string)null);

                    b.HasData(
                        new
                        {
                            IdParceiro = 1,
                            DataDoacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoacaoParceiro = 500.0,
                            IdUsuario = 1,
                            NomeParceiro = "Empresa BlaBla",
                            StatusParceiro = false
                        },
                        new
                        {
                            IdParceiro = 2,
                            DataDoacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoacaoParceiro = 500.0,
                            IdUsuario = 2,
                            NomeParceiro = "Market Empresa",
                            StatusParceiro = false
                        },
                        new
                        {
                            IdParceiro = 3,
                            DataDoacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoacaoParceiro = 500.0,
                            IdUsuario = 3,
                            NomeParceiro = "Empresa Eletro",
                            StatusParceiro = false
                        },
                        new
                        {
                            IdParceiro = 4,
                            DataDoacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoacaoParceiro = 500.0,
                            IdUsuario = 4,
                            NomeParceiro = "Empresa Papel",
                            StatusParceiro = false
                        },
                        new
                        {
                            IdParceiro = 5,
                            DataDoacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoacaoParceiro = 500.0,
                            IdUsuario = 5,
                            NomeParceiro = "Empresa Rainiken",
                            StatusParceiro = false
                        },
                        new
                        {
                            IdParceiro = 6,
                            DataDoacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoacaoParceiro = 500.0,
                            IdUsuario = 6,
                            NomeParceiro = "Empresa squol",
                            StatusParceiro = false
                        },
                        new
                        {
                            IdParceiro = 7,
                            DataDoacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoacaoParceiro = 500.0,
                            IdUsuario = 7,
                            NomeParceiro = "Empresa suifiti",
                            StatusParceiro = false
                        });
                });

            modelBuilder.Entity("Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<DateTime?>("DataAcesso")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar")
                        .HasDefaultValue("Cliente");

                    b.HasKey("IdUsuario");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            EmailUsuario = "seuEmail@gmail.com",
                            Latitude = -23.520024100000001,
                            Longitude = -46.596497999999997,
                            NomeUsuario = "admin",
                            PasswordHash = new byte[] { 233, 212, 81, 184, 27, 82, 133, 230, 117, 217, 16, 70, 250, 82, 24, 122, 30, 226, 215, 235, 174, 125, 238, 198, 157, 18, 165, 78, 143, 44, 239, 190, 21, 216, 198, 120, 15, 107, 186, 24, 149, 109, 53, 16, 6, 34, 254, 10, 153, 87, 30, 95, 212, 207, 202, 133, 231, 178, 47, 116, 199, 188, 208, 2, 140, 4, 76, 238, 13, 19, 153, 101, 93, 226, 250, 162, 254, 67, 73, 243, 86, 224, 98, 185, 173, 247, 78, 49, 74, 244, 206, 129, 103, 154, 189, 198, 197, 91, 111, 98, 132, 62, 6, 104, 203, 254, 37, 194, 166, 210, 152, 115, 13, 32, 203, 129, 165, 20, 101, 5, 45, 176, 134, 75, 174, 30, 239, 172 },
                            Perfil = "Admin"
                        });
                });

            modelBuilder.Entity("Models.Parceiros", b =>
                {
                    b.HasOne("Models.Usuario", "Usuario")
                        .WithMany("Parceiros")
                        .HasForeignKey("UsuarioIdUsuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Models.Usuario", b =>
                {
                    b.Navigation("Parceiros");
                });
#pragma warning restore 612, 618
        }
    }
}
